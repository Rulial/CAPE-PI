name: Build Without Nix

on:
  push:
  pull_request:
  workflow_dispatch:



jobs:
  build-no-nix:
    env:
      RUST_TEST_THREADS: 4
      # TODO: remove this or increase this when contract size limit is not a problem
      SOLC_OPTIMIZER_RUNS: 20
      CONTRACTS_DIR: "${{ github.workspace }}/contracts"
      GOERLI_MNEMONIC: "test test test test test test test test test test test junk"
      GOERLI_URL: "https://goerli.infura.io/v3/<project_id>"
      HARDHAT_CONFIG: "${{ github.workspace }}/contracts/hardhat.config.ts"
      RINKEBY_MNEMONIC: "test test test test test test test test test test test junk"
      RINKEBY_URL: "https://rinkeby.infura.io/v3/<project_id>"
      SOLC_PATH: "${{ github.workspace }}/bin/solc"
      SOLC_VERSION: "0.8.10"
      TEST_MNEMONIC: "test test test test test test test test test test test junk"
      WALLET: "${{ github.workspace }}/wallet"
    runs-on: self-hosted
    container:
      image: ghcr.io/catthehacker/ubuntu:act-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Deps
        run: |
          sudo apt-get update
          sudo apt-get install -y libcurl4 gcc g++ make python3-pip plantuml

      - name: Install NodeJS 16
        uses: actions/setup-node@v2
        with:
          node-version: '16'

      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          profile: default
          toolchain: "1.58.1"
          override: true
          default: true
          components: rustfmt, clippy

      - name: Install pnpm
        uses: pnpm/action-setup@v2.1.0
        with:
          version: 6
          run_install: true

      - name: Enable Rust Cache
        uses: Swatinem/rust-cache@v1

      - name: Install solc binary
        run: |
          pwd
          ls -lah
          wget -O ./bin/solc https://binaries.soliditylang.org/linux-amd64/solc-linux-amd64-v0.8.10+commit.fc410830
          chmod +x ./bin/solc

      - name: pnpm install
        run: |
          pnpm --recursive install

      - name: Add items to path
        run: |
          echo "${GITHUB_WORKSPACE}/bin" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/contracts/node_modules/.bin" >> $GITHUB_PATH
          echo "${GITHUB_WORKSPACE}/node_modules/.bin" >> $GITHUB_PATH

      - name: build-abi
        run: |
          python3 ./bin/build-abi

      - name: Lint Solidity
        run: |
          solhint -c "${GITHUB_WORKSPACE}/contracts/.solhint.json" -w 0 ${GITHUB_WORKSPACE}/contracts/**/*.sol

      - name: Clippy Check
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --workspace

      - name: cargo build
        run: |
          cargo build --release
